'use strict';

/**
 * Module dependencies.
 */

var Adapter = require('./index')
  , extend = require('extendable');

// Make the adapter extendable for easy use
Adapter.extend = extend;

/**
 * Module exports.
 */

module.exports = Adapter;

var PilotsAdapter = Adapter.extend({

  constructor: function () {
    this.parent = MyAdapter.__super__;
    this.parent.constructor();
  },

  set: function set(id, room, fn) {
    this.parent.set.call(this, id, room, fn);
    this.rooms[room]['pilots'] = this.rooms[room]['pilots'] || [];
  },

  // pilots setter and getter
  pilots: function pilots(room, data) {

    if (!this.rooms[room]) return [];

    if (data) {
      this.rooms[room]['pilots'].push(data);
    }

    return this.rooms[room]['pilots'];
  }

});

var adapter = new PilotsAdapter();

adapter.set(123456, 'INSMOTHER', function room() {
  console.log('MMMMMMMMMMMMMMMMMMM NNNNNNNNNNNNNNNNN');
});

// Set some pilots
adapter.pilots('INSMOTHER', { name: 'John' });
adapter.pilots('INSMOTHER', { name: 'Peter' });

// Get pilots by room
console.log(adapter.pilots('INSMOTHER'));

